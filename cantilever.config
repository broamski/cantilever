log.pickupdir=/home/someuser/someplace/apachelogs

# The regex is based upon the generic Apache HTTP Log Format:
# "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""
# Minimum required inputs are TIMESTAMP, METHOD, REQUEST, BYTES, USERAGENT
log.convert.regex=(?<REMOTEHOST>[^ ].*) ([^ ].*) ([^ ]*) (?<TIMESTAMP>\\[.*\\]) \"(?<METHOD>[^ ]*) (?<REQUEST>[^ ]*) (?<HTTPVERSION>[^ ]*)" (?<STATUS>[^ ]*) (?<BYTES>[^ ]*) (?<REFERER>\".*\") (?<USERAGENT>\".*\")

replay.dateformat='['dd/MMM/yyyy:HH:mm:ss Z']'
replay.starttime=[09/May/2014:23:30:15 +0000]
replay.endtime=[09/May/2014:23:30:25 +0000]

replay.request.port=80
# HTTP or HTTPS
replay.request.protocol=http
replay.request.headers.delimiter=~
replay.request.headers=Connection:keep-alive~Accept-Encoding:gzip,deflate,sdch
replay.request.servername=www.in-sides.com

truss.threads=50

# AMQ, SQS (Amazon)
replay.queue.type=AMQ
replay.queue.hostname=tcp://localhost:61616
replay.queue.queuename=HTTP_LOGS

# This is not yet supported, but we'd like to achieve this!
# Is regex more flexible than this method?
#log.convert=true
# Conversion types: apache, nginx
#log.convert.type=apache
#log.convert.describe="%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""
